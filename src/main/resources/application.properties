# Required information for spring to connect to the postgres database
spring.datasource.url=jdbc:postgresql://localhost/postgres
spring.datasource.username=postgres
spring.datasource.password=secret
spring.datasource.driver-class-name=org.postgresql.Driver

# Required information about which sql language to use
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# The following line is how you can change which file LB looks at to find the master changelog, this repo uses the default.
#spring.liquibase.change-log=classpath:/liquibase/changelog/db.changelog-master.yaml

# Default logging output is warning or higher, with this enabled we can better see what liquibase is doing at runtime.
logging.level.liquibase = INFO

# Whether to drop the database schema before running through LB changelog.
# Very useful tool for test environments so that you can bring your DB back to a known standard state quickly.
# All data added to tables/columns that were added with liquibase will be lost, so be very careful using in production environments.
spring.liquibase.drop-first=true

# Allows us to use a schema.sql script in our resources folder to initialize a new schema before liquibase starts
spring.datasource.initialization-mode=always

# Schema to use for Liquibase objects. Organisational storage of DB.
# Either create the schema first or use spring's initialization mode (above) to add the schema before liquibase starts
# Liquibase tables will be created here
spring.liquibase.liquibase-schema=liquibase_demo
# Regular DB tables will be created here
spring.liquibase.default-schema=liquibase_demo
# Tablespace to use for Liquibase objects. Physical storage of DB.
#spring.liquibase.liquibase-tablespace=

# File to which rollback SQL is written when an update is performed.
# By default this is not created so the filepath must be specified here first if you want the script generated.
spring.liquibase.rollback-file=src/main/resources/rollbackscript
# Whether rollback should be tested before update is performed.
#spring.liquibase.test-rollback-on-update=false
